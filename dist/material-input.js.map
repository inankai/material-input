{"version":3,"sources":["material-input.js"],"names":["MaterialInput","value","Object","defineProperty","configurable","enumerable","get","set","newValue","_value","createShadowRoot","innerHTML","attributesExceptions","setAttribute","WebComponents","undefined","flags","shadow","ShadowCSS","shimStyling","shadowRoot","insertAdjacentHTML","offsetTop","offsetHeight","offsetLeft","getAttribute","$hiddenInput","document","querySelector","$container","$input","$label","$message","_addEvents","_transferAttributes","_setValue","_setLabel","_setPlaceholder","_checkValidity","setTimeout","classList","remove","bind","attrName","oldVal","newVal","callbacks","_setValid","hasOwnProperty","call","_transferAttribute","msg","setCustomValidity","addEventListener","focus","hasAttribute","String","validity","valid","add","keys","attributes","key","name","val","indexOf","_toggle","label","placeholder","removeAttribute","el","cls","condition","HTMLElement","registerElement"],"mappings":"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","file":"material-input.js","sourcesContent":["'use strict';\n\nclass MaterialInput extends HTMLElement {\n\n    constructor() {\n        super(); // always call super() first in the ctor. This also calls the extended class' ctor.\n    }\n\n    createdCallback() {\n        var value = '';\n        // set value of material-input\n        Object.defineProperty( this, \"value\", {\n            configurable: true,\n            enumerable: true,\n            get: function(){\n                return value;\n            },\n            set: function(newValue){\n                value = !newValue ? '' : newValue;\n                this._value(value);\n            }\n        });\n\n        this.createShadowRoot().innerHTML = `\n            <style>\n                :host{\n                    display: block;\n                    position: relative;\n                    background: transparent;\n                    margin: .5em 0;\n                }\n                .material-input__container{\n                    width: inherit;\n                    display: block;\n                    position: relative;\n                }\n                .material-input__input{\n                    box-sizing: border-box;\n                    position: relative;\n                    background-color: transparent;\n                    font-size: 1em;\n                    color: var(--material-input-text-color, black);\n                    padding: 1em 1em 1em 10px;\n                    display: block;\n                    width: 100%;\n                    border: none;\n                    border-bottom: var(--material-input-line-height, 1px) solid var(--material-input-border-color, rgb(206,212,218));\n                    box-shadow: none;\n                }\n                .material-input__container.invalid .material-input__input{\n                    border-bottom-color: var(--material-input-invalid-color, rgb(224,49,49));\n                }\n                .material-input__container.valid .material-input__input{\n                    border-bottom-color: var(--material-input-valid-color, rgb(47,158,68));\n                }\n                .material-input__input:focus{\n                    outline: none;\n                }\n                /* placeholder and placeholder fade on focus */\n                .material-input__input::-webkit-input-placeholder {\n                    color: var(--material-input-placeholder-color, rgb(134,142,150));\n                    opacity: 1;\n                }\n                .material-input__input:focus::-webkit-input-placeholder {\n                    opacity: .5;\n                    transition: opacity .35s ease;\n                }\n                .material-input__input::-moz-placeholder {\n                    color: var(--material-input-placeholder-color, rgb(134,142,150));\n                    opacity: 1;\n                }\n                .material-input__input:focus::-moz-placeholder {\n                    opacity: .5;\n                    transition: opacity .35s ease;\n                }\n                .material-input__input:-ms-input-placeholder {\n                    color: var(--material-input-placeholder-color, rgb(134,142,150));\n                    opacity: 1;\n                }\n                .material-input__input:-ms-input-placeholder {\n                    opacity: .5;\n                    transition: opacity .35s ease;\n                }\n                /* Labels */\n                .material-input__label{\n                    color: rgb(134,142,150);\n                    font-size: inherit;\n                    pointer-events: none;\n                    position: absolute;\n                    left: 10px;\n                    bottom: 1em;\n                    transition: 0.2s ease all;\n                }\n                .material-input__container.no-animation .material-input__label,\n                .material-input__container.label-always-floats .material-input__label{\n                    transition: 0s ease all;\n                }\n                .material-input__container.is-empty .material-input__input[placeholder] ~ .material-input__label{\n                    color: var(--material-input-text-color, black);\n                }\n                /* active state */\n                .material-input__input:focus ~ .material-input__label,\n                .material-input__container:not(.is-empty) .material-input__label,\n                .material-input__container.label-always-floats .material-input__label{\n                    bottom: 3em;\n                    font-size: .75em;\n                }\n                .material-input__input:focus ~ .material-input__label,\n                .material-input__container.is-empty .material-input__input[placeholder]:focus ~ .material-input__label{\n                    color: var(--material-input-highlight-color, rgb(54,79,199));\n                }\n                /* errror state */\n                .material-input__container.invalid.label-always-floats .material-input__label,\n                .material-input__container.invalid .material-input__input:focus ~ .material-input__label,\n                .material-input__container.is-empty.invalid .material-input__input[placeholder]:focus ~ .material-input__label,\n                .material-input__container.is-empty.invalid .material-input__input[placeholder] ~ .material-input__label{\n                    color: var(--material-input-invalid-color, rgb(224,49,49));\n                }\n                /* valid state */\n                .material-input__container.valid.label-always-floats .material-input__label,\n                .material-input__container.valid .material-input__input:focus ~ .material-input__label,\n                .material-input__container.is-empty.valid .material-input__input[placeholder]:focus ~ .material-input__label,\n                .material-input__container.is-empty.valid .material-input__input[placeholder] ~ .material-input__label{\n                    color: var(--material-input-valid-color, rgb(47,158,68));\n                }\n                /* bar */\n                .material-input__bar{\n                    position:relative;\n                    display:block;\n                    width:100%;\n                }\n                .material-input__bar::before, .material-input__bar::after {\n                    content:'';\n                    height: var(--material-input-highlight-line-height, 2px);\n                    width:0;\n                    bottom:0;\n                    position:absolute;\n                    background: var(--material-input-highlight-color, rgb(54,79,199));\n                    transition:0.2s ease all;\n                }\n                .material-input__container.invalid .material-input__bar::before,\n                .material-input__container.invalid .material-input__bar::after{\n                    background: var(--material-input-invalid-color, rgb(224,49,49));\n                }\n                .material-input__container.valid .material-input__bar::before,\n                .material-input__container.valid .material-input__bar::after{\n                    background: var(--material-input-valid-color, rgb(47,158,68));\n                }\n                .material-input__bar::before {\n                    left:50%;\n                }\n                .material-input__bar::after {\n                    right:50%;\n                }\n                .material-input__input:focus ~ .material-input__bar:before, .material-input__input:focus ~ .material-input__bar:after{\n                    width:50%;\n                }\n            </style>\n            <div class=\"material-input__container no-animation${this.value == '' ? ' is-empty' : ''}\">\n                <input class=\"material-input__input\" tabindex=\"-1\" />\n                <label class=\"material-input__label\"></label>\n                <div class=\"material-input__bar\"></div>\n                <div class=\"material-input__message\"></div>\n            </div>\n        `;\n        this.attributesExceptions = [\n            'name',\n            'label',\n            'tabindex',\n            'placeholder',\n            'autofocus',\n            'autocomplete',\n            'autovalidate'\n        ];\n        // set tab index to make element focussable\n        this.setAttribute('tabindex',0);\n        // shim shadowDOM styling\n        if(WebComponents !== undefined && WebComponents.flags.shadow === true){\n            WebComponents.ShadowCSS.shimStyling( this.shadowRoot, 'material-input' )\n        }\n        // add hidden input\n        this.insertAdjacentHTML('afterend','<input tabindex=\"-1\" style=\"pointer-events: none; margin:0; border: 0; height: 0; opacity: 0; position: absolute; top: '+(this.offsetTop + this.offsetHeight)+'px; left: '+this.offsetLeft+'px;\" name=\"'+this.getAttribute('name')+'\"/>');\n        this.$hiddenInput = document.querySelector('input[name='+this.getAttribute('name')+']');\n        // elements\n        this.$container = this.shadowRoot.querySelector('.material-input__container');\n        this.$input = this.$container.querySelector('.material-input__input');\n        this.$label = this.$container.querySelector('.material-input__label');\n        this.$message = this.$container.querySelector('.material-input__message');\n        // add events\n        this._addEvents();\n        // transfer attribtues to input & hiddenInput\n        this._transferAttributes();\n        // set value, label, etc.\n        this._setValue(this.getAttribute('value'));\n        this.$input.value = this.value;\n        this._setLabel(this.getAttribute('label'));\n        this._setPlaceholder(this.getAttribute('placeholder'));\n        this._checkValidity();\n        // remove no-animation loading class\n        setTimeout(function(){\n            this.$container.classList.remove('no-animation');\n        }.bind(this),100);\n    }\n    /**\n     * when an attribute is changed\n     */\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        // define callbacks\n        var callbacks = {\n            'valid': this._setValid,\n            'value': this._setValue,\n            'label': this._setLabel,\n            'placeholder': this._setPlaceholder\n        };\n        // call callback if it exists\n        if(callbacks.hasOwnProperty(attrName)) {\n            callbacks[attrName].call(this, newVal, oldVal);\n        }\n        else{\n            // if other attributes are updated, transfer updates to hidden input field\n            this._transferAttribute(attrName, newVal, this.attributesExceptions);\n        }\n    }\n    /**\n     * set the custom validity of the input\n     */\n    setCustomValidity(msg){\n        this.$input.setCustomValidity(msg);\n        this.$hiddenInput.setCustomValidity(msg)\n    }\n    /**\n     * add events for all items\n     */\n    _addEvents(){\n        // on focuse pass to input\n        this.addEventListener('focus', function(){\n            this.$input.focus();\n        });\n        // set validation status when hiddenInput is invalid\n        this.$hiddenInput.addEventListener('invalid', function(){\n            this._setValid(false);\n        }.bind(this));\n        // pass on value when user enters content\n        this.$input.addEventListener('keydown', function(){\n            this._value(this.$input.value);\n        }.bind(this));\n        // pass in value and validate when user exits input field\n        this.$input.addEventListener('blur', function(){\n            this._value(this.$input.value);\n            // check if is valid\n            this._checkValidity();\n        }.bind(this));\n        // if autovalidate is set to true, validate on key event\n        if(this.hasAttribute('autovalidate') && String(this.getAttribute('autovalidate')) !== 'false'){\n            this.$input.addEventListener('keydown', function(){\n                // check if is valid\n                this._checkValidity();\n            }.bind(this));\n        } else if(this.$input.validity.valid === false) {\n            this.$input.addEventListener('keydown', function(){\n                // check if is valid\n                if(this.$input.value !== '' && this.$input.validity.valid === true){\n                    this._setValid(true);\n                }\n            }.bind(this));\n        }\n    }\n    /**\n     * check validity\n     */\n    _checkValidity(){\n        if(this.$input.value !== '' && (this.$input.validity.valid === true || this.$input.validity.valid === false) ){\n            this._setValid(this.$input.validity.valid);\n        }else{\n            this._setValid(undefined);\n        }\n    }\n    /**\n     * set value\n     */\n    _setValue(newValue){\n        this.value = newValue;\n    }\n    /**\n     * set field to valid or invalid\n     */\n    _setValid(validity = undefined){\n        // valid is not set\n        if(validity === undefined){\n            this.valid = undefined;\n            this.$container.classList.remove('valid');\n            this.$container.classList.remove('invalid');\n        }\n        // valid is true\n        if(validity === true){\n            this.valid = true;\n            this.$container.classList.add('valid');\n            this.$container.classList.remove('invalid');\n        }\n        // valid is false\n        if(validity === false) {\n            this.valid = false;\n            this.$container.classList.add('invalid');\n            this.$container.classList.remove('valid');\n        }\n    }\n    /**\n     * transfer attributes to input\n     */\n    _transferAttributes(){\n        for(var key of Object.keys(this.attributes)){\n            if (this.attributes.hasOwnProperty(key)) {\n                this._transferAttribute(this.attributes[key].name, this.attributes[key].value, this.attributesExceptions);\n            }\n        }\n    }\n    /**\n     * transfer attribute to input\n     */\n    _transferAttribute(attrName, val, attributesExceptions){\n        if(attributesExceptions.indexOf(attrName) === -1){\n            this.$hiddenInput.setAttribute(attrName,val);\n            this.$input.setAttribute(attrName,val);\n        }\n    }\n    /**\n     * update value and toggle is-empty class\n     */\n    _value(val){\n        // set value of hidden input for form submission\n        this.$hiddenInput.value = val;\n        // set state depending on value\n        this._toggle(this.$container, 'is-empty', val === '');\n    }\n    /**\n     * add label to material-input\n     */\n    _setLabel(label){\n        if(label !== undefined && label !== null){\n            return this.$label.innerHTML = label;\n        }\n        this.$label.innerHTML = '';\n    }\n    /**\n     * set placeholder and add label-always-floats class\n     */\n    _setPlaceholder(placeholder){\n        if(placeholder !== null && placeholder !== undefined){\n            this.$input.setAttribute('placeholder', placeholder);\n            this.$container.classList.add('label-always-floats');\n            return;\n        }\n        this.$input.removeAttribute('placeholder');\n        this.$container.classList.remove('label-always-floats');\n    }\n    /**\n     * since classList.toggle with a second param is not supported in IE11 and below\n     */\n    _toggle(el, cls, condition){\n        if(condition === true){\n            el.classList.add(cls);\n        }else{\n            el.classList.remove(cls);\n        }\n    }\n}\n\ndocument.registerElement('material-input', MaterialInput);\n"]}